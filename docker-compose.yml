version: '3.8'

services:
  frontend:
    build: ./saas-it-inventory-frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - app-network
    volumes:
      - ./saas-it-inventory-frontend/nginx-logs:/var/log/nginx
    environment:
      - NODE_ENV=production
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  backend:
    build: ./saas-it-inventory
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongo:27017/it_inventory}
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    command: >
      sh -c "node scripts/init.js &&
             npm start"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  mongo:
    image: mongo:4.4
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

volumes:
  mongodb_data:
  nginx-logs:

networks:
  app-network:
    driver: bridge
